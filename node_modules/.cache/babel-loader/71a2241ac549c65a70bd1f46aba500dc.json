{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seba9\\\\Desktop\\\\exercise\\\\src\\\\todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ToDo = () => {\n  _s();\n\n  const id = parseInt(localStorage.getItem(\"id\"));\n  const params = useParams();\n  const navigate = useNavigate();\n  const [toDo, setToDo] = useState(\"\");\n  const [list, setList] = useState([]);\n  const [status, setStatus] = useState(false);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTask(toDo);\n    setToDo(\"\");\n    setStatus(false);\n  };\n\n  const handleOnChange = e => {\n    setToDo(e.target.value);\n  };\n\n  const addTask = async task => {\n    try {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var raw = JSON.stringify({\n        \"task\": task,\n        \"id_folder\": id\n      });\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n      const response = await fetch(\"http://127.0.0.1:5000/task/\", requestOptions);\n\n      if (response.status === 200) {\n        setStatus(true);\n      }\n    } catch (error) {\n      console.log(error, \"error\");\n    }\n  };\n\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        var requestOptions = {\n          method: 'GET',\n          redirect: 'follow'\n        };\n        const response = await fetch(\"http://127.0.0.1:5000/task/\", requestOptions);\n        const responseBody = await response.json();\n        setList(responseBody);\n        console.log(responseBody);\n      } catch (error) {\n        console.log(error, \"error\");\n      }\n    };\n\n    getData();\n  }, [status]);\n\n  const goEdit = (id, task) => {\n    navigate('/edit', {\n      state: {\n        id: id,\n        task: task,\n        folder: params.name\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card container w-25 mt-5 p-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Link, {\n        style: {\n          textDecoration: \"none\",\n          color: \"white\"\n        },\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            background: \"none\",\n            border: \"none\",\n            fontWeight: \"bold\"\n          },\n          children: \"Folders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 82\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 18\n      }, this), \" \", \">\", \" \", params.name, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-group list-group-flush\",\n        children: list.map(item => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: id === item.id_folder ? /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"list-group-item d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-md-5\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"checkbox\",\n                  name: item.id,\n                  id: item.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"ms-1\",\n                  htmlFor: item.id,\n                  children: [\" \", item.task]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"col-md-3\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  style: {\n                    border: \"none\",\n                    background: \"none\",\n                    color: \"blue\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(\"a\", {\n                    onClick: () => {\n                      goEdit(item.id, item.task);\n                    },\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 111\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 36\n            }, this) : null\n          }, void 0, false);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        onSubmit: handleSubmit,\n        className: \"d-flex mt-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"New Task\",\n          className: \"form-control\",\n          value: toDo,\n          onChange: handleOnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-dark mx-3\",\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ToDo, \"mWVX8LjPytmokE+udP3tN3Siamw=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = ToDo;\nexport default ToDo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToDo\");","map":{"version":3,"sources":["C:/Users/seba9/Desktop/exercise/src/todo.js"],"names":["React","useState","useEffect","useNavigate","useParams","Link","ToDo","id","parseInt","localStorage","getItem","params","navigate","toDo","setToDo","list","setList","status","setStatus","handleSubmit","e","preventDefault","addTask","handleOnChange","target","value","task","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","response","fetch","error","console","log","getData","responseBody","json","goEdit","state","folder","name","textDecoration","color","background","border","fontWeight","map","item","id_folder"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,SAAtB,QAAuC,cAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AAEf,QAAMC,EAAE,GAAGC,QAAQ,CAACC,YAAY,CAACC,OAAb,CAAqB,IAArB,CAAD,CAAnB;AACA,QAAMC,MAAM,GAAGP,SAAS,EAAxB;AACA,QAAMQ,QAAQ,GAAGT,WAAW,EAA5B;AAGA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBb,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACc,IAAD,EAAOC,OAAP,IAAkBf,QAAQ,CAAC,EAAD,CAAhC;AAGA,QAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAAC,KAAD,CAApC;;AAGA,QAAMkB,YAAY,GAAGC,CAAC,IAAI;AACtBA,IAAAA,CAAC,CAACC,cAAF;AACAC,IAAAA,OAAO,CAACT,IAAD,CAAP;AACAC,IAAAA,OAAO,CAAC,EAAD,CAAP;AACAI,IAAAA,SAAS,CAAC,KAAD,CAAT;AACH,GALD;;AAOA,QAAMK,cAAc,GAAGH,CAAC,IAAI;AACxBN,IAAAA,OAAO,CAACM,CAAC,CAACI,MAAF,CAASC,KAAV,CAAP;AACH,GAFD;;AAKA,QAAMH,OAAO,GAAG,MAAOI,IAAP,IAAgB;AAC5B,QAAI;AACA,UAAIC,SAAS,GAAG,IAAIC,OAAJ,EAAhB;AACAD,MAAAA,SAAS,CAACE,MAAV,CAAiB,cAAjB,EAAiC,kBAAjC;AACA,UAAIC,GAAG,GAAGC,IAAI,CAACC,SAAL,CAAe;AACrB,gBAAQN,IADa;AAErB,qBAAanB;AAFQ,OAAf,CAAV;AAKA,UAAI0B,cAAc,GAAG;AACjBC,QAAAA,MAAM,EAAE,MADS;AAEjBC,QAAAA,OAAO,EAAER,SAFQ;AAGjBS,QAAAA,IAAI,EAAEN,GAHW;AAIjBO,QAAAA,QAAQ,EAAE;AAJO,OAArB;AAOA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgCN,cAAhC,CAA5B;;AACA,UAAIK,QAAQ,CAACrB,MAAT,KAAoB,GAAxB,EAA6B;AACzBC,QAAAA,SAAS,CAAC,IAAD,CAAT;AAEH;AACJ,KApBD,CAoBE,OAAOsB,KAAP,EAAc;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,OAAnB;AACH;AACJ,GAxBD;;AA0BAtC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMyC,OAAO,GAAG,YAAY;AACxB,UAAI;AACA,YAAIV,cAAc,GAAG;AACjBC,UAAAA,MAAM,EAAE,KADS;AAEjBG,UAAAA,QAAQ,EAAE;AAFO,SAArB;AAIA,cAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,6BAAD,EAAgCN,cAAhC,CAA5B;AACA,cAAMW,YAAY,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAA3B;AACA7B,QAAAA,OAAO,CAAC4B,YAAD,CAAP;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAYE,YAAZ;AACH,OATD,CASE,OAAOJ,KAAP,EAAc;AACZC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EAAmB,OAAnB;AACH;AACJ,KAbD;;AAcAG,IAAAA,OAAO;AACV,GAhBQ,EAgBN,CAAC1B,MAAD,CAhBM,CAAT;;AAkBA,QAAM6B,MAAM,GAAG,CAACvC,EAAD,EAAKmB,IAAL,KAAc;AACzBd,IAAAA,QAAQ,CAAC,OAAD,EAAU;AAAEmC,MAAAA,KAAK,EAAE;AAAExC,QAAAA,EAAE,EAAEA,EAAN;AAAUmB,QAAAA,IAAI,EAAEA,IAAhB;AAAsBsB,QAAAA,MAAM,EAAErC,MAAM,CAACsC;AAArC;AAAT,KAAV,CAAR;AACH,GAFD;;AAKA,sBACI;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,4BACI;AAAA,mCAAK,QAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAACC,UAAAA,cAAc,EAAE,MAAjB;AAAyBC,UAAAA,KAAK,EAAE;AAAhC,SAAb;AAAuD,QAAA,EAAE,EAAE,GAA3D;AAAA,+BAAgE;AAAQ,UAAA,KAAK,EAAE;AAAEC,YAAAA,UAAU,EAAE,MAAd;AAAsBC,YAAAA,MAAM,EAAE,MAA9B;AAAsCC,YAAAA,UAAU,EAAE;AAAlD,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAhE;AAAA;AAAA;AAAA;AAAA,cAAL,OAA0K,GAA1K,OAAgL3C,MAAM,CAACsC,IAAvL;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,6BAAd;AAAA,kBACKlC,IAAI,CAACwC,GAAL,CAASC,IAAI,IAAI;AACd,8BAAQ;AAAA,sBACHjD,EAAE,KAAKiD,IAAI,CAACC,SAAZ,gBACM;AAAkB,cAAA,SAAS,EAAC,wBAA5B;AAAA,sCACC;AAAK,gBAAA,SAAS,EAAC,UAAf;AAAA,wCACI;AAAO,kBAAA,IAAI,EAAC,UAAZ;AAAuB,kBAAA,IAAI,EAAED,IAAI,CAACjD,EAAlC;AAAsC,kBAAA,EAAE,EAAEiD,IAAI,CAACjD;AAA/C;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAO,kBAAA,SAAS,EAAC,MAAjB;AAAwB,kBAAA,OAAO,EAAEiD,IAAI,CAACjD,EAAtC;AAAA,kCAA6CiD,IAAI,CAAC9B,IAAlD;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADD,eAKC;AAAM,gBAAA,SAAS,EAAC,UAAhB;AAAA,uCACI;AAAQ,kBAAA,KAAK,EAAE;AAAC2B,oBAAAA,MAAM,EAAE,MAAT;AAAiBD,oBAAAA,UAAU,EAAE,MAA7B;AAAqCD,oBAAAA,KAAK,EAAG;AAA7C,mBAAf;AAAA,yCAAsE;AAAG,oBAAA,OAAO,EAAE,MAAM;AAAEL,sBAAAA,MAAM,CAACU,IAAI,CAACjD,EAAN,EAAUiD,IAAI,CAAC9B,IAAf,CAAN;AAA4B,qBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAtE;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBALD;AAAA,eAAS8B,IAAI,CAACjD,EAAd;AAAA;AAAA;AAAA;AAAA,oBADN,GAUK;AAXF,2BAAR;AAeH,SAhBA;AADL;AAAA;AAAA;AAAA;AAAA,cADJ,eAoBI;AAAM,QAAA,MAAM,EAAC,EAAb;AAAgB,QAAA,QAAQ,EAAEY,YAA1B;AAAwC,QAAA,SAAS,EAAC,aAAlD;AAAA,gCACI;AACI,UAAA,IAAI,EAAC,MADT;AAEI,UAAA,WAAW,EAAC,UAFhB;AAGI,UAAA,SAAS,EAAC,cAHd;AAII,UAAA,KAAK,EAAEN,IAJX;AAKI,UAAA,QAAQ,EAAEU;AALd;AAAA;AAAA;AAAA;AAAA,gBADJ,eAQI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,SAAS,EAAC,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoCH,CA/GD;;GAAMjB,I;UAGaF,S,EACED,W;;;KAJfG,I;AAiHN,eAAeA,IAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { useNavigate, useParams } from 'react-router';\r\nimport { Link } from 'react-router-dom';\r\nconst ToDo = () => {\r\n\r\n    const id = parseInt(localStorage.getItem(\"id\"))\r\n    const params = useParams()\r\n    const navigate = useNavigate();\r\n\r\n\r\n    const [toDo, setToDo] = useState(\"\");\r\n    const [list, setList] = useState([]);\r\n\r\n\r\n    const [status, setStatus] = useState(false)\r\n\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        addTask(toDo)\r\n        setToDo(\"\");\r\n        setStatus(false)\r\n    };\r\n\r\n    const handleOnChange = e => {\r\n        setToDo(e.target.value);\r\n    };\r\n\r\n\r\n    const addTask = async (task) => {\r\n        try {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            var raw = JSON.stringify({\r\n                \"task\": task,\r\n                \"id_folder\": id\r\n            });\r\n\r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: 'follow'\r\n            };\r\n\r\n            const response = await fetch(\"http://127.0.0.1:5000/task/\", requestOptions);\r\n            if (response.status === 200) {\r\n                setStatus(true)\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error, \"error\")\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            try {\r\n                var requestOptions = {\r\n                    method: 'GET',\r\n                    redirect: 'follow'\r\n                };\r\n                const response = await fetch(\"http://127.0.0.1:5000/task/\", requestOptions);\r\n                const responseBody = await response.json();\r\n                setList(responseBody);\r\n                console.log(responseBody)\r\n            } catch (error) {\r\n                console.log(error, \"error\")\r\n            }\r\n        }\r\n        getData()\r\n    }, [status])\r\n\r\n    const goEdit = (id, task) => {\r\n        navigate('/edit', { state: { id: id, task: task, folder: params.name } });\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"card container w-25 mt-5 p-3\" >\r\n            <h1> <Link style={{textDecoration: \"none\", color: \"white\"}} to={\"/\"}><button style={{ background: \"none\", border: \"none\", fontWeight: \"bold\" }} >Folders</button></Link> {\">\"} {params.name} </h1>\r\n            <div>\r\n                <ul className=\"list-group list-group-flush\">\r\n                    {list.map(item => {\r\n                        return (<>\r\n                            {id === item.id_folder\r\n                                ? (<li key={item.id} className=\"list-group-item d-flex\">\r\n                                    <div className=\"col-md-5\" >\r\n                                        <input type=\"checkbox\" name={item.id} id={item.id} />\r\n                                        <label className=\"ms-1\" htmlFor={item.id} > {item.task}</label>\r\n                                    </div>\r\n                                    <span className=\"col-md-3\">\r\n                                        <button style={{border: \"none\", background: \"none\", color : \"blue\"}} ><a onClick={() => { goEdit(item.id, item.task) }} >Edit</a></button>\r\n                                    </span>\r\n                                </li>)\r\n                                : null\r\n                            }\r\n                        </>\r\n                        );\r\n                    })}\r\n                </ul>\r\n                <form action=\"\" onSubmit={handleSubmit} className=\"d-flex mt-2\" >\r\n                    <input\r\n                        type=\"text\"\r\n                        placeholder=\"New Task\"\r\n                        className=\"form-control\"\r\n                        value={toDo}\r\n                        onChange={handleOnChange}\r\n                    />\r\n                    <button type=\"submit\" className=\"btn btn-dark mx-3\" >Add</button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ToDo\r\n"]},"metadata":{},"sourceType":"module"}